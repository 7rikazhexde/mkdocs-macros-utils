# pre-commit stop running hooks after the first failure.
fail_fast: true
# A list of repository mappings
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Remove spaces at end of lines except markdown
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
        exclude: '(\.obsidian)/.*'
      # Make the last line of the file a newline code
      - id: end-of-file-fixer
        exclude: '(\.obsidian)/.*'
        # Unify line break code to LF
      - id: mixed-line-ending
        args: [--fix=lf]
        exclude: '(\.obsidian/.*)'
      # toml syntax check
      - id: check-toml
      # yaml syntax check
      - id: check-yaml
        # Exclude check for "could not determine a constructor for the tag 'tag:yaml.org,2002:python/name:materialx.emoji.twemoji'"
        args: [--unsafe]

  # https://python-poetry.org/docs/pre-commit-hooks/#usage
  - repo: https://github.com/python-poetry/poetry
    rev: 2.1.3
    hooks:
      - id: poetry-check
        verbose: true
      - id: poetry-lock
        verbose: true

  # [Note] poetry export is not done in pre-commit, but in GitHub Actions (update-requirements-after-dependabot.yml)
  # https://github.com/python-poetry/poetry-plugin-export?tab=readme-ov-file#usage
  #- repo: https://github.com/python-poetry/poetry-plugin-export.git
  #  rev: 1.9.0
  #  hooks:
  #    - id: poetry-export
  #      args: ["-f", "requirements.txt", "-o", "requirements.txt", "--without-hashes"]
  #      verbose: true
  #      files: ^pyproject\.toml$
  #    - id: poetry-export
  #      args: ["--with", "dev", "-f", "requirements.txt", "-o", "requirements-dev.txt", "--without-hashes"]
  #      verbose: true
  #      files: ^pyproject\.toml$

  # https://github.com/shellcheck-py/shellcheck-py?tab=readme-ov-file#usage
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint

  # Reference: https://github.com/DavidAnson/markdownlint-cli2#overview
  # > markdownlint-cli is a traditional command-line interface for markdownlint.
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.44.0
    hooks:
      - id: markdownlint
        args: [
          "--config",
          ".markdownlint.jsonc",
          "--ignore",
          "templates/**/*.md",
          "README.md",
          "docs/**/*.md"
        ]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.11.8
    hooks:
      - id: ruff
        args: ["--fix"]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.15.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests==2.32.0.20240622]
        args: [--config-file=pyproject.toml]
        exclude: ^docs/gist/
