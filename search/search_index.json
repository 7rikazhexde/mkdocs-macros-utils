{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"mkdocs-macros-utils","text":"<p>mkdocs-macros-utils is mkdocs-macros-plugin based project that provides macros to extend cards, code blocks, etc, in MkDocs documents.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Link Card: Create link cards with images and descriptions, etc</li> <li>Gist Code Block: Embed and syntax-highlight code from GitHub Gists</li> <li>X/Twitter Card: Embed tweets with proper styling and dark mode support</li> </ul>"},{"location":"#usage","title":"Usage","text":""},{"location":"#install-mkdocs-macros-utils","title":"Install mkdocs-macros-utils","text":"<p>For pip</p> <pre><code>pip install mkdocs-macros-utils\n</code></pre> <p>For poetry</p> <pre><code>poetry add mkdocs-macros-utils\n</code></pre>"},{"location":"#config-settings","title":"Config settings","text":"<ol> <li> <p>Add the plugin to your <code>mkdocs.yml</code></p> <pre><code>plugins:\n  - macros:\n      modules: [mkdocs_macros_utils]\n\nmarkdown_extensions:\n  - attr_list\n  - md_in_html\n\nextra:\n  debug:\n    link_card: false  # Set to true for debug logging\n    gist_codeblock: false\n    x_twitter_card: false\n\nextra_css:\n  - stylesheets/macros-utils/link-card.css\n  - stylesheets/macros-utils/gist-cb.css\n  - stylesheets/macros-utils/x-twitter-link-card.css\n\nextra_javascript:\n  - javascripts/macros-utils/x-twitter-widget.js\n</code></pre> </li> <li> <p>Start the development server</p> <pre><code>poetry run mkdocs serve\n</code></pre> </li> </ol> <p>The plugin will automatically create the required directories and copy CSS/JS files during the build process.</p>"},{"location":"#examples","title":"Examples","text":""},{"location":"tags/","title":"Tags","text":"<p>\u4ee5\u4e0b\u306f\u95a2\u9023\u30bf\u30b0\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002</p>"},{"location":"examples/","title":"Examples","text":"<ul> <li>Link Card</li> <li>Gist Code Block</li> <li>X/Twitter Card</li> </ul>"},{"location":"examples/gist-codeblock-macro/","title":"Gist Codeblock Macro","text":"","tags":["MkDocs Macros","Custom Component","Gist","Material for Mkdocs"]},{"location":"examples/gist-codeblock-macro/#summary","title":"Summary","text":"<p>This section describes a macro that displays Gist code in a Mkdocs code block.</p> <p>This macro is assumed to be used with Material for Mkdocs.</p>","tags":["MkDocs Macros","Custom Component","Gist","Material for Mkdocs"]},{"location":"examples/gist-codeblock-macro/#usage","title":"Usage","text":"<p>Write a macro in markdown with the following parameters to display Gist code in a code block.</p> <p>Macro\uff1a<code>gist_codeblock</code></p> Parameters Required Default Description <code>gist_url</code> required none Gist shared link <code>indent</code> optional 0 indent level (<code>0</code>: none, <code>1</code>: 4 spaces, <code>2</code>: 8 spaces) <code>ext</code> Optional Automatic determination from URL language extension (e.g. <code>py</code>, <code>js</code>, <code>sh</code>, etc.)","tags":["MkDocs Macros","Custom Component","Gist","Material for Mkdocs"]},{"location":"examples/gist-codeblock-macro/#examples","title":"Examples","text":"","tags":["MkDocs Macros","Custom Component","Gist","Material for Mkdocs"]},{"location":"examples/gist-codeblock-macro/#basic-usage","title":"Basic Usage","text":"Specify minimal parameters <pre><code>{{ gist_codeblock(\n    gist_url=\"https://gist.github.com/user/id\"\n) }}\n</code></pre> <p>Example</p> <pre><code>{{ gist_codeblock(\n    gist_url=\"https://gist.github.com/7rikazhexde/89036d5fc849411b925e6da7d4986b52\"\n) }}\n</code></pre> <pre><code>#!/usr/bin/env bash\n\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &amp;&amp; pwd)\"\n\ncreate_post_commit() {\n    cat &gt; \"$1\" &lt;&lt; EOF\n#!/usr/bin/env bash\n\nsource \"$SCRIPT_DIR/../.venv/bin/activate\"\npoetry run python \"$SCRIPT_DIR/../ci/run_git_tag_base_pyproject.py\"\nif [ $? -ne 0 ]; then\n    printf \"Error occurred in run_git_tag_base_pyproject.py. Exiting post-commit.\\n\"\n    exit 1\nfi\n\ngit push origin main:main\ngit push --tags\nprintf \".git/hooks/post-commit end!!!\\n\"\nEOF\n\n    if [ \"$2\" == \"execute\" ]; then\n        chmod +x \"$1\"\n        echo \"$1 created with execution permission.\"\n    else\n        echo \"$1 created.\"\n    fi\n}\n\nif [ -f \"$SCRIPT_DIR/.git/hooks/post-commit\" ]; then\n    # For shellcheck SC2162\n    read -r -p \"$SCRIPT_DIR/../.git/hooks/post-commit already exists. Do you want to create $SCRIPT_DIR/.git/hooks/post-commit.second instead? (y/N): \" choice\n    if [[ $choice == \"y\" || $choice == \"Y\" ]]; then\n        create_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit.second\"\n        exit 0\n    else\n        create_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit\" \"execute\"\n        exit 0\n    fi\nfi\n\ncreate_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit\" \"execute\"\nexit 0\n</code></pre>","tags":["MkDocs Macros","Custom Component","Gist","Material for Mkdocs"]},{"location":"examples/gist-codeblock-macro/#specify-indentation-level","title":"Specify indentation level","text":"<p>Tip</p> <p>Must be specified if the code is to be displayed within a block of admonition.</p> Specify indentation level <pre><code>{{ gist_codeblock(\n    gist_url=\"Gist shared link\",\n    indent=1  # Indentation level (1:4 spaces, 2:8 spaces)\n) }}\n</code></pre> <p>Example of displaying code within an admonition block</p> <pre><code>??? info \"Title\"\n\n    {{ gist_codeblock(\n        gist_url=\"https://gist.github.com/7rikazhexde/89036d5fc849411b925e6da7d4986b52\",\n        indent=2\n    ) }}\n</code></pre> Indent example (indent=1) <pre><code>#!/usr/bin/env bash\n\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &amp;&amp; pwd)\"\n\ncreate_post_commit() {\n    cat &gt; \"$1\" &lt;&lt; EOF\n#!/usr/bin/env bash\n\nsource \"$SCRIPT_DIR/../.venv/bin/activate\"\npoetry run python \"$SCRIPT_DIR/../ci/run_git_tag_base_pyproject.py\"\nif [ $? -ne 0 ]; then\n    printf \"Error occurred in run_git_tag_base_pyproject.py. Exiting post-commit.\\n\"\n    exit 1\nfi\n\ngit push origin main:main\ngit push --tags\nprintf \".git/hooks/post-commit end!!!\\n\"\nEOF\n\n    if [ \"$2\" == \"execute\" ]; then\n        chmod +x \"$1\"\n        echo \"$1 created with execution permission.\"\n    else\n        echo \"$1 created.\"\n    fi\n}\n\nif [ -f \"$SCRIPT_DIR/.git/hooks/post-commit\" ]; then\n    # For shellcheck SC2162\n    read -r -p \"$SCRIPT_DIR/../.git/hooks/post-commit already exists. Do you want to create $SCRIPT_DIR/.git/hooks/post-commit.second instead? (y/N): \" choice\n    if [[ $choice == \"y\" || $choice == \"Y\" ]]; then\n        create_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit.second\"\n        exit 0\n    else\n        create_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit\" \"execute\"\n        exit 0\n    fi\nfi\n\ncreate_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit\" \"execute\"\nexit 0\n</code></pre> Indent example (indent=2) <pre><code>#!/usr/bin/env bash\n\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &amp;&amp; pwd)\"\n\ncreate_post_commit() {\n    cat &gt; \"$1\" &lt;&lt; EOF\n#!/usr/bin/env bash\n\nsource \"$SCRIPT_DIR/../.venv/bin/activate\"\npoetry run python \"$SCRIPT_DIR/../ci/run_git_tag_base_pyproject.py\"\nif [ $? -ne 0 ]; then\n    printf \"Error occurred in run_git_tag_base_pyproject.py. Exiting post-commit.\\n\"\n    exit 1\nfi\n\ngit push origin main:main\ngit push --tags\nprintf \".git/hooks/post-commit end!!!\\n\"\nEOF\n\n    if [ \"$2\" == \"execute\" ]; then\n        chmod +x \"$1\"\n        echo \"$1 created with execution permission.\"\n    else\n        echo \"$1 created.\"\n    fi\n}\n\nif [ -f \"$SCRIPT_DIR/.git/hooks/post-commit\" ]; then\n    # For shellcheck SC2162\n    read -r -p \"$SCRIPT_DIR/../.git/hooks/post-commit already exists. Do you want to create $SCRIPT_DIR/.git/hooks/post-commit.second instead? (y/N): \" choice\n    if [[ $choice == \"y\" || $choice == \"Y\" ]]; then\n        create_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit.second\"\n        exit 0\n    else\n        create_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit\" \"execute\"\n        exit 0\n    fi\nfi\n\ncreate_post_commit \"$SCRIPT_DIR/../.git/hooks/post-commit\" \"execute\"\nexit 0\n</code></pre>","tags":["MkDocs Macros","Custom Component","Gist","Material for Mkdocs"]},{"location":"examples/gist-codeblock-macro/#to-explicitly-specify-a-language","title":"To explicitly specify a language","text":"Specify language extensions <pre><code>{{ gist_codeblock(\n    gist_url=\"Gist shared link\",\n    ext=\"py\"  # Specify language extensions\n) }}\n</code></pre> <p>Example</p> <pre><code>{{ gist_codeblock(\n    gist_url=\"https://gist.github.com/7rikazhexde/6ada2a6ef3ca23938bfa62f32e3fbed8\",\n    ext=\"sh\"\n) }}\n</code></pre> <pre><code>#!/usr/bin/env bash\n# Usage: poetry install pre-commit install\n# File generated by pre-commit: https://pre-commit.com\n\n# start templated\nINSTALL_PYTHON=[Project Path]/.venv/bin/python\nARGS=(hook-impl --config=.pre-commit-config.yaml --hook-type=pre-commit)\n# end templated\n\nHERE=\"$(cd \"$(dirname \"$0\")\" &amp;&amp; pwd)\"\nARGS+=(--hook-dir \"$HERE\" -- \"$@\")\n\nif [ -x \"$INSTALL_PYTHON\" ]; then\n    exec \"$INSTALL_PYTHON\" -mpre_commit \"${ARGS[@]}\"\nelif command -v pre-commit &gt; /dev/null; then\n    exec pre-commit \"${ARGS[@]}\"\nelse\n    echo '`pre-commit` not found.  Did you forget to activate your virtualenv?' 1&gt;&amp;2\n    exit 1\nfi\n</code></pre>","tags":["MkDocs Macros","Custom Component","Gist","Material for Mkdocs"]},{"location":"examples/link-card-macro/","title":"Link Card Macro","text":"","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#summary","title":"Summary","text":"<p>This section describes a macro to display custom link cards in Mkdocs.</p> <p>This macro is assumed to be used with Material for Mkdocs.</p>","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#usage","title":"Usage","text":"<p>Custom link cards can be added by including a macro in markdown with the following parameters</p> <p>Macro name: <code>link_card</code>.</p> Parameters Required Default Description <code>url</code> required None Linked URL <code>title</code> required None Card Title <code>description</code> optional blank text card description <code>image_path</code> optional default image image to display on card <code>domain</code> optional Default domain of the site Domain Display <code>external</code> optional False external link flag <code>svg_path</code> optional Automatic determination from URL Custom SVG icon path in format \"user_id/gist_id/filename\" (e.g., \"7rikazhexde/d418315080179e7c1bd9a7a4366b81f6/github-cutom-icon.svg\")","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#exapmples","title":"Exapmples","text":"<p>Create a link card based on the css settings and the values specified in the parameters.</p>","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#examples-of-minimum-parameters","title":"Examples of minimum parameters","text":"How to specify minimum parameters <p>Info</p> <p>If <code>image_path</code> is omitted, <code>assets/img/site.png</code> will be displayed.</p> <pre><code>{{ link_card(\n    url=\"Linked path (absolute path)\",\n    title=\"page title\",\n) }}\n</code></pre> <pre><code>{{ link_card(\n    url=\"https://7rikazhexde.github.io/mkdocs-macros-utils/\",\n    title=\"MkDocs Macros Utils Documentation\",\n) }}\n</code></pre> MkDocs Macros Utils Documentation 7rikazhexde.github.io","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#examples-of-maximum-parameters","title":"Examples of maximum parameters","text":"How to specify maximum parameters <p>Info</p> <p>If <code>image_path</code> and <code>svg_path</code> are specified, <code>svg_path</code> takes precedence.</p> <pre><code>{{ link_card(\n    url=\"https://7rikazhexde-pkm-obsidian-mkdocs.netlify.app/ja/development/tools/design/inkscape/\",\n    title=\"Inkscape - 7rikazhexde PKM\",\n    description=\"Inkscape tips\",\n    external=True,\n    image_path=\"examples/images/inkscape.png\"\n    svg_path=\"\"\n) }}\n</code></pre>","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#specify-image_path","title":"Specify image_path","text":"Inkscape - 7rikazhexde PKM Inkscape tips 7rikazhexde-pkm-obsidian-mkdocs.netlify.app","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#specify-svg_path","title":"Specify svg_path","text":"Inkscape - 7rikazhexde PKM Inkscape tips 7rikazhexde-pkm-obsidian-mkdocs.netlify.app","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#example-of-github-repository-link","title":"Example of GitHub repository link","text":"<p>For links to GitHub repositories, the GitHub icon is automatically displayed by default. If you want to display a custom SVG icon, specify the Gist path in the <code>svg_path</code> parameter.</p> How to specify a GitHub repository <pre><code>{{ link_card(\n    url=\"GitHub repository URL\",\n    title=\"Page title\",\n    description=\"Repository description\",\n    external=True\n) }}\n</code></pre> <pre><code>{{ link_card(\n    url=\"https://github.com/pyenv-win/pyenv-win/blob/master/docs/installation.md#git-commands\",\n    title=\"pyenv-win Installation Guide\",\n    description=\"Git installation commands for pyenv-win\",\n    external=True\n) }}  \n</code></pre> pyenv-win Installation Guide Git installation commands for pyenv-win github.com How to designate SVG as the icon for card links <p>About the SVG file to be used</p> <ul> <li>Create a gist in the following format (public release) and specify the <code>GistID</code> and <code>filename.svg</code> in the <code>link_card</code> parameter: <code>svg_path</code>.</li> <li>In case of specific colors (fill=\"#333\" (gray),fill=\"black\" (black)), replace with class=\"custom-link-card-icon\" considering light mode and dark mode display, and change colors by CSS targeting class=\"custom-link-card-icon\".</li> <li>To ensure consistent color transitions between light and dark modes, this code removes <code>fill-rule=\"evenodd\"</code> and <code>clip-rule=\"evenodd\"</code> attributes during SVG processing. If you need these styling effects, please consider using alternative SVG approaches.</li> </ul> <pre><code>&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\" viewBox=\"0 0 128 128\"&gt;\n    &lt;path fill=\"#2088ff\" d=\"M26.666 0C11.97 0 0 11.97 0 26.666c0 12.87 9.181 23.651 21.334 26.13v37.87c0 11.77 9.68 21.334 21.332 21.334h.195c1.302 9.023 9.1 16 18.473 16C71.612 128 80 119.612 80 109.334s-8.388-18.668-18.666-18.668c-9.372 0-17.17 6.977-18.473 16h-.195c-8.737 0-16-7.152-16-16V63.779a18.514 18.514 0 0 0 13.24 5.555h2.955c1.303 9.023 9.1 16 18.473 16 9.372 0 17.169-6.977 18.47-16h11.057c1.303 9.023 9.1 16 18.473 16 10.278 0 18.666-8.39 18.666-18.668C128 56.388 119.612 48 109.334 48c-9.373 0-17.171 6.977-18.473 16H79.805c-1.301-9.023-9.098-16-18.471-16s-17.171 6.977-18.473 16h-2.955c-6.433 0-11.793-4.589-12.988-10.672 14.58-.136 26.416-12.05 26.416-26.662C53.334 11.97 41.362 0 26.666 0zm0 5.334A21.292 21.292 0 0 1 48 26.666 21.294 21.294 0 0 1 26.666 48 21.292 21.292 0 0 1 5.334 26.666 21.29 21.29 0 0 1 26.666 5.334zm-5.215 7.541C18.67 12.889 16 15.123 16 18.166v17.043c0 4.043 4.709 6.663 8.145 4.533l13.634-8.455c3.257-2.02 3.274-7.002.032-9.045l-13.635-8.59a5.024 5.024 0 0 0-2.725-.777zm-.117 5.291 13.635 8.588-13.635 8.455V18.166zm40 35.168a13.29 13.29 0 0 1 13.332 13.332A13.293 13.293 0 0 1 61.334 80 13.294 13.294 0 0 1 48 66.666a13.293 13.293 0 0 1 13.334-13.332zm48 0a13.29 13.29 0 0 1 13.332 13.332A13.293 13.293 0 0 1 109.334 80 13.294 13.294 0 0 1 96 66.666a13.293 13.293 0 0 1 13.334-13.332zm-42.568 6.951a2.667 2.667 0 0 0-1.887.78l-6.3 6.294-2.093-2.084a2.667 2.667 0 0 0-3.771.006 2.667 2.667 0 0 0 .008 3.772l3.974 3.96a2.667 2.667 0 0 0 3.766-.001l8.185-8.174a2.667 2.667 0 0 0 .002-3.772 2.667 2.667 0 0 0-1.884-.78zm48 0a2.667 2.667 0 0 0-1.887.78l-6.3 6.294-2.093-2.084a2.667 2.667 0 0 0-3.771.006 2.667 2.667 0 0 0 .008 3.772l3.974 3.96a2.667 2.667 0 0 0 3.766-.001l8.185-8.174a2.667 2.667 0 0 0 .002-3.772 2.667 2.667 0 0 0-1.884-.78zM61.334 96a13.293 13.293 0 0 1 13.332 13.334 13.29 13.29 0 0 1-13.332 13.332A13.293 13.293 0 0 1 48 109.334 13.294 13.294 0 0 1 61.334 96zM56 105.334c-2.193 0-4 1.807-4 4 0 2.195 1.808 4 4 4s4-1.805 4-4c0-2.193-1.807-4-4-4zm10.666 0c-2.193 0-4 1.807-4 4 0 2.195 1.808 4 4 4s4-1.805 4-4c0-2.193-1.807-4-4-4zM56 108c.75 0 1.334.585 1.334 1.334 0 .753-.583 1.332-1.334 1.332-.75 0-1.334-.58-1.334-1.332 0-.75.585-1.334 1.334-1.334zm10.666 0c.75 0 1.334.585 1.334 1.334 0 .753-.583 1.332-1.334 1.332-.75 0-1.332-.58-1.332-1.332 0-.75.583-1.334 1.332-1.334z\"/&gt;&lt;path fill=\"#79b8ff\" d=\"M109.334 90.666c-9.383 0-17.188 6.993-18.477 16.031a2.667 2.667 0 0 0-.265-.011l-2.7.09a2.667 2.667 0 0 0-2.578 2.751 2.667 2.667 0 0 0 2.752 2.578l2.7-.087a2.667 2.667 0 0 0 .097-.006C92.17 121.029 99.965 128 109.334 128c10.278 0 18.666-8.388 18.666-18.666s-8.388-18.668-18.666-18.668zm0 5.334a13.293 13.293 0 0 1 13.332 13.334 13.29 13.29 0 0 1-13.332 13.332A13.293 13.293 0 0 1 96 109.334 13.294 13.294 0 0 1 109.334 96z\"/&gt;\n&lt;/svg&gt;\n</code></pre> <pre><code>{{ link_card(\n    url=\"GitHub repository URL\",\n    title=\"Page title\",\n    description=\"Repository description\",\n    external=True,\n    svg_path=\"UserID/GistID/sample.svg\"\n) }}\n</code></pre> <pre><code>{{ link_card(\n    url=\"https://github.com/marketplace/actions/json-to-variables-setter\",\n    title=\"JSON to Variables Setter\",\n    description=\"GitHub Action designed to parse a JSON file and set the resulting variables (such as operating systems, programming language versions, and GitHub Pages branch) as outputs in a GitHub Actions workflow.\",\n    external=True,\n    svg_path=\"7rikazhexde/996eec6799c869324bf9fe2e93b1a876/github-actions-icon.svg\"\n) }}\n</code></pre> JSON to Variables Setter GitHub Action designed to parse a JSON file and set the resulting variables (such as operating systems, programming language versions, and GitHub Pages branch) as outputs in a GitHub Actions workflow. github.com","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#example-of-a-hatena-blog-post","title":"Example of a Hatena blog post","text":"<p>If the link is to a Hatena Blog post, the Hatena Blog logo will automatically be displayed.</p> How to specify a Hatena blog post <pre><code>{{ link_card(\n    url=\"Hatena blog post URL\",\n    title=\"Page title\",\n    description=\"Article description\",\n    domain=\"username.hatenablog.com\",\n    external=True\n) }}\n</code></pre> <pre><code>{{ link_card(\n    url=\"https://7rikazhexde-techlog.hatenablog.com/entry/2023/07/08/173536#Pyenv%E3%81%AB%E3%82%88%E3%82%8BPython%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B\",\n    title=\"Building a Python environment on Ubuntu on RaspberryPi using Pyenv and Poetry\",\n    description=\"Explanation of how to build a Python environment using Pyenv and Poetry on Ubuntu on RaspberryPi.\",\n    external=True\n) }}  \n</code></pre> Building a Python environment on Ubuntu on RaspberryPi using Pyenv and Poetry Explanation of how to build a Python environment using Pyenv and Poetry on Ubuntu on RaspberryPi. 7rikazhexde-techlog.hatenablog.com","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/link-card-macro/#other-web-site-examples","title":"Other Web site examples","text":"<p>For websites other than those listed above, icons are not displayed on card links by default.</p> How to specify other Web sites <pre><code>{{ link_card(\n    url=\"URL of the site\",\n    title=\"page title\",\n    description=\"page description\",\n    external=True\n) }}\n</code></pre> <pre><code>{{ link_card(\n    url=\"https://news.mynavi.jp/techplus/article/zeropython-122/\",\n    title=\"Introduction to Python from scratch\",\n    description=\"A series of courses explaining the basics of Python programming\",\n    external=True\n) }}\n</code></pre> Introduction to Python from scratch A series of courses explaining the basics of Python programming news.mynavi.jp","tags":["MkDocs Macros","Custom Component","Link Card","Material for Mkdocs"]},{"location":"examples/x-twitter-card-macro/","title":"X-Twitter Link Card Macro","text":"","tags":["MkDocs Macros","Custom Component","Link Card","X(Twitter)"]},{"location":"examples/x-twitter-card-macro/#summary","title":"Summary","text":"<p>This page describes a macro to display X (formerly Twitter) link cards using MkDocs.</p>","tags":["MkDocs Macros","Custom Component","Link Card","X(Twitter)"]},{"location":"examples/x-twitter-card-macro/#usage","title":"Usage","text":"<p>You can add X (formerly Twitter) link cards by specifying the following parameters in your markdown file.</p> <p>Macro name: <code>x_twitter_card</code>.</p> Parameters Required Description <code>url</code> required URL of X (former Twitter)","tags":["MkDocs Macros","Custom Component","Link Card","X(Twitter)"]},{"location":"examples/x-twitter-card-macro/#examples","title":"Examples","text":"<p>How to use <code>x_twitter_card</code></p> <pre><code>{{ x_twitter_card('https://x.com/tw_7rikazhexde/status/1886013919795560505?s=46&amp;t=rYtARjUKX2vIcBeQXU5GdQ') }}\n</code></pre> <p> </p>","tags":["MkDocs Macros","Custom Component","Link Card","X(Twitter)"]}]}